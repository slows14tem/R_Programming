library(KoNLP)
# 실습: 형태소 분석을 위한 KoNLP 패키지 설치
install.packages("https://cran.rstudio.com/bin/windows/contrib/3.4/KoNLP_0.80.1.zip",
repos = NULL)
library(KoNLP)
# 실습: 한글 사전과 텍스트 마이닝 관련 패키지 설치
install.packages("Sejong")
install.packages("wordcloud")
install.packages("tm")
# 실습: 패키지 로딩
#library(KoNLP)
install.packages("hash")
install.packages("tau")
install.packages("devtools")
install.packages("RSQLite")
library(KoNLP)
library(tm)
library(KoNLP)
install.packages("rJava")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"')
Sys.which("make")
install.packages("jsonlite", type = "source")
install.packages("multilinguer")
# 실습: 형태소 분석을 위한 KoNLP 패키지 설치
install.packages("https://cran.rstudio.com/bin/windows/contrib/3.4/KoNLP_0.80.1.zip",
repos = NULL)
library(multilinguer)
library(multilinguer)
install.packages("multilinguer")
install.packages("multilinguer")
library(multilinguer)
library(multilinguer)
install_jdk()
install_jdk()
install.packages(c("hash", "tau", "Sejong", "RSQLite", "devtools", "bit", "rex", "lazyeval", "htmlwidgets", "crosstalk", "promises", "later", "sessioninfo", "xopen", "bit64", "blob", "DBI", "memoise", "plogr", "covr", "DT", "rcmdcheck", "rversions"), type = "binary")
install.packages("remotes")
remotes::install_github('haven-jeon/KoNLP', upgrade = "never", INSTALL_opts=c("--no-multiarch"))
extractNoun('인하대학교 공학대학원 블록체인 전공입니다.')
library(KoNLP)
extractNoun('부산대학교 인공지능 활용 빅데이터 분석 웹서비스 개발자 과정입니다.')
install.packages("worldcloud")
install.packages("tm")
library(tm)
library(worldcloud)
install.packages("worldcloud")
install.packages("worldcloud")
install.packages("worldcloud")
install.packages("wordcloud")
install.packages("tm")
install.packages("tm")
library(wordcloud)
library(tm)
# 실습: 텍스트 자료 가져오기
facebook <- file("C:/Rwork/Part-II/facebook_bigdata.txt",
encoding = "UTF-8")
facebook_data <- readLines(facebook)
head(facebook_data)
# 실습: 세종 사전에 단어 추가하기
user_dic <- data.frame(term = c("R 프로그래밍", "페이스북", "김진성", "소셜네트워크"),
tag = 'ncn')
buildDictionary(ext_dic = "sejong", user_dic = user_dic)
# 실습: 한글 사전과 텍스트 마이닝 관련 패키지 설치
install.packages("Sejong")
# 실습: 패키지 로딩
#library(KoNLP)
install.packages("hash")
install.packages("tau")
install.packages("devtools")
install.packages("RSQLite")
#암종류별 성별 분석
library(dplyr)
#암종류별 성별 분석
install.packages("dplyr")
library(dplyr)
#데이터 불러오기(암발생자수)
df =read.csv(file = "./03/03_암발생자수_.csv", header=T, stringsAsFactors = F, fileEncoding = "euc-kr")
#데이터 불러오기(암발생자수)
df =read.csv(file = "/03/03_암발생자수_.csv", header=T, stringsAsFactors = F, fileEncoding = "euc-kr")
#데이터 불러오기(암발생자수)
df =read.csv(file = "../03/03_암발생자수_.csv", header=T, stringsAsFactors = F, fileEncoding = "euc-kr")
#데이터 불러오기(암발생자수)
df =read.csv(file = "./03/03_암발생자수_.csv", header=T, stringsAsFactors = F, fileEncoding = "euc-kr")
#데이터 불러오기(암발생자수)
df =read.csv(file = "../03/03_암발생자수_.csv", header=T, stringsAsFactors = F, fileEncoding = "euc-kr")
#데이터 불러오기(암발생자수)
df <- read.csv(file = "./03/03_암발생자수_.csv", header=T, stringsAsFactors = F, fileEncoding = "euc-kr")
#데이터 불러오기(암발생자수)
df <- read.csv(file = "../03/03_암발생자수_.csv", header=T, stringsAsFactors = F, fileEncoding = "euc-kr")
getwd()
#데이터 불러오기(암발생자수)
df <- read.csv(file = "/03/03_암발생자수_.csv", header=T, stringsAsFactors = F, fileEncoding = "euc-kr")
#데이터 불러오기(암발생자수)
setwd("C:/RworkProject")
df <- read.csv(file = "/03/03_암발생자수_.csv", header=T, stringsAsFactors = F, fileEncoding = "euc-kr")
getwd()
df <- read.csv(file = "./03/03_암발생자수_.csv", header=T, stringsAsFactors = F, fileEncoding = "euc-kr")
df
# 열명 변경
# "암종별", "성별", "연령별", "발생자수", "조발생률"
names <- c["암종별", "성별", "연령별", "발생자수", "조발생률"]
# 열명 변경
# "암종별", "성별", "연령별", "발생자수", "조발생률"
names(df) <- c("암종별", "성별", "연령별", "발생자수", "조발생률")
names(df)
# 데이터셋 조회
# 1) 특정 변수 조회
df %>% filter(!(연령별 %in% c("계", "연령미상")))
# 데이터셋 조회
# 1) 특정 변수 조회
df %>% filter((연령별 %in% c("계", "연령미상")))
# 2) 특정 열명을 사용하여 조회
df %>% filter((연령별 %in% c("계", "연령미상")))
df1 <- read.csv(file = "./03/03_암발생자수_.csv", header=T, stringsAsFactors = F, fileEncoding = "euc-kr")
df1
# 열명 변경
# "암종별", "성별", "연령별", "발생자수", "조발생률"
names(df1) <- c("암종별", "성별", "연령별", "발생자수", "조발생률")
names(df1)
# 데이터셋 조회
# 1) 특정 변수 조회
df1$암종별
# 2) 특정 열명을 사용하여 조회
df1['암종별']
# 데이터셋 조회
# 1) 특정 변수 조회
t1 <- df1$암종별
# 2) 특정 열명을 사용하여 조회(1번과는 결과의 데이터 타입이 다름)
t2 <- df1['암종별']
class(t1)
mode(t1)
class(t2)
mode(t2)
is.vector(t1)
is.vector(t1)
# 3) 특정 행 조회 :1행 조회
df1[1]
# 3) 특정 행 조회 :1행 조회
df1[1,]
# 3) 특정 행 조회 :1행 조회
df1[2,]
# 3) 특정 행 조회 :1행 조회
df1[1,]
# 3) 특정 행 조회 :1행 조회
df1[c(2,4),]
# 4)특정행 제거 : 1행제거
df1[-1,]
# 4)특정행 제거 : 1행제거
df <- df1[-1,]
head(df)
# 암종류 확인
df['암종별']
# 암종류 확인
df$암종별
# 암종류 확인
unique(df$암종별)
# 모든 암 제거
df2 <- df1 %>% filter(암종별 != "모든 암(C00-C96)")
unique(df2$암종별)
# 모든 암 제거
df2 <- df %>% filter(암종별 != "모든 암(C00-C96)")
unique(df2$암종별)
%>% filter(연령별 == "계")
# 모든 암 제거
df2 <- df %>% filter(암종별 != "모든 암(C00-C96)") %>%
filter(연령별 == "계")
unique(df2$암종별)
df2
df21 <- df2 %>% filter(성별 == "계")
df22 <- df2 %>% filter(성별 != "계")
df21
df22
# 5) 특정행 열 조회
df21 <- df21[, c('암종별','발생자수')]
df21
df22
df22 <- df22[, c('암종별','성별', '발생자수')]
df22
# 5) 특정행 열 조회
df[1,1]
# 5) 특정행 열 조회
df[1,'암종별']
# 5) 특정행 열 조회
df[1:3,'암종별']
# 5) 특정행 열 조회
df[1:3, c('암종별','발생자수')]
# 열 데이터 타입 확인
str(df)
View(df)
View(df)
# 값 변경 : - => 0
df$발생자수 <- ifelse(df$발생자수 == "-", 0)
# 값 변경 : - => 0
df$발생자수 <- ifelse(df$발생자수 == "-", 0,)
# 값 변경 : - => 0
df$발생자수 <- ifelse(df$발생자수 == "-", 0, df$발생자수)
df
df$조발생률 <- ifelse(df$조발생률 == "-", 0, df$조발생률)
df
# 열 데이터 타입 확인
str(df)
# 열 데이터타입 변경
df$발생자수 <- as.numeric(df$발생자수)
df$조발생률 <- as.numeric(df$조발생률)
str(df)
# 모든암 제거하고 연령별이 계인 데이터
# 모든 암 제거
df2 <- df %>% filter(암종별 != "모든 암(C00-C96)") %>%
filter(연령별 == "계")
df21 <- df2 %>% filter(성별 == "계")
df22 <- df2 %>% filter(성별 != "계")
df21
df22
unique(df2$암종별)
df21 <- df21[, c('암종별','발생자수')]
df22 <- df22[, c('암종별','성별', '발생자수')]
str(df21)
str(df22)
# 그래프
library(ggplot2)
ggplot(mapping =aes(x=암종별, y=발생자수), data=df21) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("연령대별 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
df21
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
help("ggplot2")
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90))
ggplot(mapping =aes(x=암종별, y=발생자수), data=df21) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90))
ggplot(mapping =aes(x=암종별, y=발생자수), data=df21) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90, hjust=1))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90, hjust=1))
ggplot(mapping =aes(x=암종별, y=발생자수), data=df21) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90, hjust=1))
df22
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90, hjust=1))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90, hjust=0))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90, hjust=1))
ggplot(mapping =aes(x=암종별, y=발생자수), data=df21) +
geom_bar(stat="identity", position=position_dodge(),fill="red") +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90, hjust=1))
ggplot(sleep, aes(x=암종별, y=발생자수), data=df21) +
geom_bar(stat="identity", position=position_dodge(),fill="red") +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge()) + coord_flip()  +
ggtitle("암종별 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90, hjust=1))
ggplot(mapping =aes(x=성별별, y=발생자수), data=df22) +
geom_bar(stat="identity", position=position_dodge(),fill="red") +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90, hjust=1))
ggplot(mapping =aes(x=성별, y=발생자수), data=df22) +
geom_bar(stat="identity", position=position_dodge(),fill="red") +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90, hjust=1))
ggplot(mapping =aes(x=성별, y=발생자수), data=df22) +
geom_bar(stat="identity", position=position_dodge(),fill="red") +
ggtitle("성별 암 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),
axis.text.x = element_text(angle = 90, hjust=1))
ggplot(mapping =aes(x=성별, y=발생자수), data=df22) +
geom_bar(stat="identity", position=position_dodge(),fill="red") +
ggtitle("성별 암 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=성별, y=발생자수), data=df22) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("성별 암 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=성별, y=암종별), data=df22) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("성별 암 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=성별, y=count(암종별)), data=df22) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("성별 암 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
df22
df2
